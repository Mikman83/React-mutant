{"version":3,"sources":["components/Content/Wtf/Wtf.module.css","components/Nav/Nav.module.css","components/Content/Intro/Intro.module.css","components/Header/Header.module.css","components/Header/crumbaugh.jpg","components/Content/Content.module.css","components/Header/Header.jsx","components/Nav/Nav.jsx","components/Content/Intro/Intro.jsx","components/Content/Maintheme/Maintheme.jsx","components/Content/Wtf/Wtf.jsx","components/Content/Oneway/Oneway.jsx","components/Content/Content.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","dialogs","dialogs_list","dialog_item","active","messages_list","mesage_item","menu","list","item","inner","avatar","wrapper","img","__webpack_require__","p","Header","react_default","a","createElement","className","styles","src","helloImg","alt","Nav","react_router_dom","to","activeClassName","Intro","props","descr","birthday","date","city","spb","social","vk","Maintheme","Wtf","concat","Oneway","Content","react_router","path","component","App","components_Header_Header","components_Nav_Nav","components_Content_Content","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.089b2cea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Wtf_dialogs__dcipL\",\"dialogs_list\":\"Wtf_dialogs_list__1yzhc\",\"dialog_item\":\"Wtf_dialog_item__138Ql\",\"active\":\"Wtf_active__3M-4Z\",\"messages_list\":\"Wtf_messages_list__PFArU\",\"mesage_item\":\"Wtf_mesage_item__3F9ZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Nav_menu__6qBwT\",\"list\":\"Nav_list__3DDQO\",\"item\":\"Nav_item__2sH5g\",\"active\":\"Nav_active__3Dz94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"Intro_inner__jNHoO\",\"avatar\":\"Intro_avatar__3_2Oz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__2y58z\",\"img\":\"Header_img__1pyz2\"};","module.exports = __webpack_public_path__ + \"static/media/crumbaugh.99bf3227.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Content_wrapper__2jPKv\"};","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport helloImg from './crumbaugh.jpg';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className={styles.wrapper}>\r\n\r\n      <div className={styles.img}>\r\n        <img src={helloImg} alt=\"Fjords\" />\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport styles from  './Nav.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Nav = () => {\n  return (\n    <nav className={styles.menu}>\n      <ul className={styles.list}>\n        <li className={styles.item}>\n            <NavLink to=\"/Intro\" activeClassName={styles.active}>Intro</NavLink>\n        </li>\n        <li className={styles.item}>\n            <NavLink to=\"/Maintheme\" activeClassName={styles.active}>Main Theme</NavLink>\n        </li>\n        <li className={styles.item}>\n            <NavLink to=\"/Wtf\" activeClassName={styles.active}>WTF</NavLink>\n        </li>\n        <li className={styles.item}>\n            <NavLink to=\"/Oneway\" activeClassName={styles.active}>One Way</NavLink>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Nav;\n","import React from 'react';\r\nimport styles from './Intro.module.css';\r\n\r\nconst Intro = (props) => {\r\n  return (\r\n    <main className={styles.wrapper}>\r\n      <div className={styles.inner}>\r\n        <div className={styles.avatar}>\r\n          <img src=\"https://cdn.icon-icons.com/icons2/546/PNG/512/1455555011_users-10_icon-icons.com_53271.png\" alt=\"avatar\" />\r\n        </div>\r\n        <div className={styles.descr}>\r\n          <p>Ivlev Michael</p>\r\n          <p>{props.birthday} {props.date}</p>\r\n          <p>{props.city} {props.spb}</p>\r\n          <p>{props.social} {props.vk}</p>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Intro;","import React from 'react';\r\nimport styles from './Maintheme.module.css';\r\n\r\nconst Maintheme = () => {\r\n    return (\r\n        <div>\r\n            Main Tmeme component (Portfolio)\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Maintheme;","import React from 'react';\nimport styles from './Wtf.module.css'\n\nconst Wtf  = () => {\n  return (\n    <div className={styles.dialogs}> {/*WTF component (blog)*/}\n      <div className={styles.dialogs_list}>\n        <div className={styles.dialog_item}>Арина</div>\n        <div className={styles.dialog_item}>Никитос</div>\n        <div className={styles.dialog_item}>Даня</div>\n        <div className={`${styles.dialog_item} ${styles.active}`}>Ленок</div>\n        <div className={styles.dialog_item}>Джексон</div>\n        <div className={styles.dialog_item}>Диабло</div>\n      </div>\n      <div className={styles.messages_list}>\n        <div className={styles.mesage_item}>Привет</div>\n        <div className={styles.mesage_item}>Ку</div>\n        <div className={styles.mesage_item}>Погнали на великах катать?</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Wtf;\n","import React from 'react';\r\nimport styles from './Oneway.module.css';\r\n\r\nconst Oneway = () => {\r\n    return (\r\n        <div>\r\n            Oneway component (Contacts)\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Oneway;","import React from 'react';\nimport styles from './Content.module.css';\nimport Intro from './Intro/Intro';\nimport Maintheme from './Maintheme/Maintheme';\nimport Wtf from './Wtf/Wtf';\nimport Oneway from './Oneway/Oneway';\nimport {Route} from \"react-router-dom\";\n\nconst Content = () => {\n    return (\n        <div className={styles.wrapper}>\n            <Route path=\"/Intro\" component={Intro}/>\n            <Route path=\"/Maintheme\" component={Maintheme}/>\n            <Route path=\"/Wtf\" component={Wtf}/>\n            <Route path=\"/Oneway\" component={Oneway}/>\n            {/*<Intro birthday=\"Date of birth:\" date=\"19 january\" city=\"City:\" spb=\"Saint-Petersburg\" social=\"Social network:\" vk=\"https://vk.com/mika_dev\" />*/}\n        </div>\n    )\n}\n\nexport default Content;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Nav from './components/Nav/Nav';\nimport Content from \"./components/Content/Content\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Nav/>\n                <Content/>\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}